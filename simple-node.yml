tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  #- indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/k8s/custom_types.yaml
  - indigo_custom_types: https://baltig.infn.it/infn-cloud/tosca-types/raw/master/custom_types.yaml

description: >
  Launch a compute node getting the IP and SSH credentials to access via ssh
metadata:
  display_name: Start a virtual machine
  icon: https://indigo-paas.cloud.ba.infn.it/public/images/vm-icon.png
  #allowed_groups: "developers"

topology_template:

  inputs:        
    num_cpus:
      type: integer
      description: Number of virtual cpus for the VM
      default: 1
      constraints:
      - valid_values: [ 1, 2, 4 ]
      
    mem_size:
      type: scalar-unit.size
      description: Amount of memory for the VM
      default: 2 GB
      constraints:
      - valid_values: [ 2 GB, 4 GB ]  
      
#    num_gpus:
#      type: integer
#      description: Number of required GPUs. For a CPU deployment provide '0' here
#      required: yes
#      default: 0

    num_instances:
      type: integer
      description: Number of VMs to be spawned
      default: 1      

    os_distribution: 
      type: string
      default: ubuntu
      description: Operating System distro - valid values ubuntu, centos 
      constraints:
      - valid_values: [ "ubuntu", "centos" ]

    os_version:
      type: version
      default: 16.04
      description: Operating System distribution version
      constraints:
      - valid_values: [ "16.04", "7" ]
      
#    service_ports:
#      type: map
#      required: false
#      constraints:
#        - min_length: 0
#      entry_schema:
#        type: tosca.datatypes.network.PortSpec
#      description: Ports to open on the host


  node_templates:

#    pub_network:
#      type: tosca.nodes.network.Network
#      properties:
#        network_type: public
#
#    server_pub_port:
#      type: tosca.nodes.network.Port
#      properties:
#        order: 1
#      requirements:
#        - binding: simple_node
#        - link: pub_network
#
#    priv_network:
#      type: tosca.nodes.network.Network
#      properties:
#        network_type: private
#
#    server_priv_port:
#      type: tosca.nodes.network.Port
#      properties:
#        order: 0
#      requirements:
#        - binding: simple_node
#        - link: priv_network

    simple_node:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
#            ports: { get_input: service_ports }
            network_name: PUBLIC
        scalable:
          properties:
            count: { get_input: num_instances }
        host:
          properties:
            #instance_type: m1.small
            num_cpus: { get_input: num_cpus }
            mem_size: { get_input: mem_size }
#            num_gpus: { get_input: num_gpus }
        os:
          properties:
            #image: ubuntu-16.04
            distribution: { get_input: os_distribution }
            version: { get_input: os_version }

  outputs:
    node_ip:
      value: { get_attribute: [ simple_node, public_address, 0 ] }
    node_creds:
      value: { get_attribute: [ simple_node, endpoint, credential, 0 ] }
