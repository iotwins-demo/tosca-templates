tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  #- indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml
  - indigo_custom_types: https://baltig.infn.it/infn-cloud/tosca-types/raw/master/custom_types.yaml

description: "Run Artificial Intelligence (AI) and simulation based services for digital twins."

metadata:
  display_name: General Services
  icon: https://indigo-paas.cloud.ba.infn.it/public/images/IoTwins_Logo.png
  allowed_groups: "developers"

topology_template:
  inputs:

    function_selector:
      type: integer
      description:
      required: yes

    input_filename:
      type: string
      description: Upload input file
      required: yes


    cpus:
      type: float
      default: 1
      description: Amount of CPUs for this job
      required: yes

    mem:
      type: string
      description: Amount of Memory for this job
      required: yes
      constraints:
        - valid_values: [ '1024 MB', '2048 MB' ]

    os_project_name:
      type: string
      description: Openstack project name
      required: yes

    os_username:
      type: string
      description: Openstack account username
      required: yes

    os_password:
      type: string
      description: Openstack account password
      required: yes

    os_auth_url:
      type: string
      description: Openstack keystone auth url
      required: yes

    os_identity_api_version:
      type: string
      description: Openstack keystone auth version
      required: yes

    os_swift_endpoint:
      type: string
      description: Openstack swift data url
      required: yes

    job_uuid:
      type: string
      description: Job autogenerated UUID
      required: yes

  node_templates:

    preprocessing_job:
      type: tosca.nodes.indigo.Container.Application.Docker.Chronos
      properties:
        command: 'WORKDIR=$MESOS_SANDBOX /bin/bash /run.sh'
        retries: 3
        environment_variables:
          OS_PROJECT_NAME: { get_input: os_project_name }
          OS_USERNAME: { get_input: os_username }
          OS_PASSWORD: { get_input: os_password }
          OS_AUTH_URL: { get_input: os_auth_url }
          OS_IDENTITY_API_VERSION: { get_input: os_identity_api_version }
          JOB_UUID: { get_input: job_uuid }
          APPLICATION: 'general_services'
          OUTDIR: 'out'
          INPUT_FILENAME: { get_input: input_filename }
          FUNCTION: { get_input: function_selector }

      artifacts:
        image:
          file: 'iotwinsdemo/ai-services:paasint'
          type: tosca.artifacts.Deployment.Image.Container.Docker
      requirements:
        - host: docker_runtime


    docker_runtime:
      type: tosca.nodes.indigo.Container.Runtime.Docker
      capabilities:
        host:
          properties:
            num_cpus: { get_input: cpus }
            mem_size: { get_input: mem }

  outputs:
    output_url:
      value: { concat: [ { get_input : os_swift_endpoint },  '/OUTPUT/', { get_input : job_uuid }, '/output.tar.gz' ] }
