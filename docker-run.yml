tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://baltig.infn.it/infn-cloud/tosca-types/raw/master/custom_types.yaml

description: Run a docker container

metadata:
  display_name: Run docker
  icon: https://paas.cloud.infn.it/public/images/docker.png
  allowed_groups: "developers"

topology_template:

  inputs:

    num_cpus:
      type: integer
      default: 2

    mem_size:
      type: string
      default: "1 GB"
      
    docker_appname:
      type: string
      default: "nginx"

    docker_image:
      type: string
      default: "nginx"

    docker_tag:
      type: string 
      default: "latest"

#    docker_ports:
#      type: string
#      default: "8080:80"

    docker_command:
      type: string
      default: ""

    service_ports:
      type: integer
      default: "8080"
      
  node_templates:

    simple_node:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              user_port:
                protocol: tcp
                #source: { get_input: service_ports }
                source: 8080
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: { get_input: num_cpus }
            mem_size: { get_input: mem_size }
        os:
          properties:
            distribution: ubuntu
            version: 16.04
            type: linux
 
    simple_docker:
      type: tosca.nodes.indigo.dockerRun
      properties:
        docker_appname: { get_input: docker_appname }
        docker_image: { get_input: docker_image }
        docker_tag: { get_input: docker_tag }
        #docker_ports: { get_input: docker_ports }
        docker_ports: "8080:80"
        docker_command: { get_input: docker_command }
      requirements:
        - host: simple_node 
 
  outputs:
    node_ip:
      value: { get_attribute: [ simple_node, public_address, 0 ] }
    node_creds:
      value: { get_attribute: [ simple_node, endpoint, credential, 0 ] }
